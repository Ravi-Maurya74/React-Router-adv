{"ast":null,"code":"var _jsxFileName = \"/Users/rahulmaurya/React/React Router adv/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 28\n  }, this);\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Failed to fetch events\"\n    }));\n  } else {\n    return response;\n  }\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","Response","JSON","stringify","$RefreshReg$"],"sources":["/Users/rahulmaurya/React/React Router adv/frontend/src/pages/EventsPage.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\nimport { useLoaderData } from \"react-router-dom\";\n\nfunction EventsPage() {\n  const data = useLoaderData();\n  if (data.isError) return <div>{data.message}</div>;\n  const events = data.events;\n  return <>{<EventsList events={events} />}</>;\n}\n\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    throw new Response(JSON.stringify({ message: \"Failed to fetch events\" }),);\n  } else {\n    return response;\n  }\n}\n\nexport default EventsPage;\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B,IAAIO,IAAI,CAACC,OAAO,EAAE,oBAAON,OAAA;IAAAO,QAAA,EAAMF,IAAI,CAACG;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAClD,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAC1B,oBAAOb,OAAA,CAAAE,SAAA;IAAAK,QAAA,eAAGP,OAAA,CAACH,UAAU;MAACgB,MAAM,EAAEA;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAAG,CAAC;AAC9C;AAACR,EAAA,CALQD,UAAU;EAAA,QACJL,aAAa;AAAA;AAAAgB,EAAA,GADnBX,UAAU;AAOnB,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEb,OAAO,EAAE;IAAyB,CAAC,CAAE,CAAC;EAC5E,CAAC,MAAM;IACL,OAAOQ,QAAQ;EACjB;AACF;AAEA,eAAeb,UAAU;AAAC,IAAAW,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}